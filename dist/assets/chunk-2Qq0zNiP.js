import{j as e,o as q,aa as $,Q as O,aD as F,am as M,a0 as V,J as Y,K as U}from"./chunk-8WlaufA8.js";import{a as S}from"./chunk-pjYta8vt.js";import{g as z,h as H,B as E,t as Z,I as J,O as D}from"./index-BK5E59O8.js";import{S as _,a as A,b as T,c as C,d as f}from"./chunk-DktN3Kjy.js";import{E as K}from"./chunk-kzSEtJwL.js";import{B as I}from"./chunk-Cg2ZZDgQ.js";import{f as L}from"./chunk-BQPSriyy.js";const Q=({item:i,onComplete:r,onMove:t,onEdit:o,onDelete:n,showActions:l=!0,className:s=""})=>{const d=g=>{switch(g){case 1:return"bg-red-100 text-red-800 border-red-200";case 2:return"bg-yellow-100 text-yellow-800 border-yellow-200";case 3:return"bg-green-100 text-green-800 border-green-200";default:return"bg-gray-100 text-gray-800 border-gray-200"}},c=g=>{switch(g){case 1:return"High";case 2:return"Medium";case 3:return"Low";default:return"Medium"}},a=g=>{switch(g){case"pending":return"bg-yellow-100 text-yellow-800";case"discussed":return"bg-green-100 text-green-800";case"moved":return"bg-blue-100 text-blue-800";default:return"bg-gray-100 text-gray-800"}},h=()=>{r&&i.status==="pending"&&r(i)},u=()=>{t&&i.status==="pending"&&t(i)},p=()=>{o&&o(i)},m=()=>{n&&n(i)};return e.jsx(z,{className:`transition-all hover:shadow-md ${s}`,children:e.jsx(H,{className:"p-4",children:e.jsxs("div",{className:"space-y-3",children:[e.jsxs("div",{className:"flex items-start justify-between",children:[e.jsx("h4",{className:"font-medium text-foreground leading-tight flex-1 mr-3",children:i.title}),e.jsxs("div",{className:"flex items-center gap-2 flex-shrink-0",children:[e.jsxs(I,{variant:"outline",className:d(i.priority),children:[e.jsx(q,{className:"h-3 w-3 mr-1"}),c(i.priority)]}),e.jsxs(I,{variant:i.status==="discussed"?"secondary":"outline",className:a(i.status),children:[i.status==="pending"&&e.jsx($,{className:"h-3 w-3 mr-1"}),i.status==="discussed"&&e.jsx(O,{className:"h-3 w-3 mr-1"}),i.status==="moved"&&e.jsx(F,{className:"h-3 w-3 mr-1"}),i.status.charAt(0).toUpperCase()+i.status.slice(1)]})]})]}),i.description&&e.jsx("div",{className:"text-sm text-muted-foreground leading-relaxed",children:e.jsx("p",{children:i.description})}),i.tags&&i.tags.length>0&&e.jsx("div",{className:"flex flex-wrap gap-1",children:i.tags.map((g,N)=>e.jsx(I,{variant:"secondary",className:"text-xs",children:g},N))}),e.jsxs("div",{className:"flex items-center justify-between pt-2 border-t border-border/50",children:[e.jsxs("div",{className:"text-xs text-muted-foreground",children:["Created ",L(new Date(i.createdAt),"MMM d, yyyy"),i.updatedAt!==i.createdAt&&e.jsxs("span",{children:[" â€¢ Updated ",L(new Date(i.updatedAt),"MMM d, yyyy")]})]}),l&&e.jsxs("div",{className:"flex items-center gap-1",children:[i.status==="pending"&&r&&e.jsxs(E,{variant:"outline",size:"sm",onClick:h,className:"h-7 px-3 text-xs",children:[e.jsx(O,{className:"h-3 w-3 mr-1"}),"Complete"]}),i.status==="pending"&&t&&e.jsxs(E,{variant:"outline",size:"sm",onClick:u,className:"h-7 px-3 text-xs",children:[e.jsx(F,{className:"h-3 w-3 mr-1"}),"Move"]}),o&&e.jsxs(E,{variant:"ghost",size:"sm",onClick:p,className:"h-7 px-3 text-xs",children:[e.jsx(M,{className:"h-3 w-3 mr-1"}),"Edit"]}),n&&e.jsxs(E,{variant:"ghost",size:"sm",onClick:m,className:"h-7 px-3 text-xs text-destructive hover:text-destructive",children:[e.jsx(V,{className:"h-3 w-3 mr-1"}),"Delete"]})]})]})]})})})},ae=({items:i=[],loading:r=!1,onComplete:t,onMove:o,onEdit:n,onDelete:l,showActions:s=!0,emptyMessage:d="No agenda items found",emptyDescription:c="Agenda items will appear here once they are added."})=>{const[a,h]=S.useState(""),[u,p]=S.useState("createdAt"),[m,g]=S.useState("desc"),[N,R]=S.useState("all"),[P,B]=S.useState("all"),b=S.useMemo(()=>{let w=i;if(a){const x=a.toLowerCase();w=w.filter(v=>v.title.toLowerCase().includes(x)||v.description&&v.description.toLowerCase().includes(x)||v.tags&&v.tags.some(y=>y.toLowerCase().includes(x)))}return N!=="all"&&(w=w.filter(x=>x.status===N)),P!=="all"&&(w=w.filter(x=>x.priority===parseInt(P))),w.sort((x,v)=>{let y,j;switch(u){case"title":y=x.title.toLowerCase(),j=v.title.toLowerCase();break;case"priority":y=x.priority,j=v.priority;break;case"status":y=x.status,j=v.status;break;case"updatedAt":y=new Date(x.updatedAt),j=new Date(v.updatedAt);break;case"createdAt":default:y=new Date(x.createdAt),j=new Date(v.createdAt);break}return m==="asc"?y<j?-1:y>j?1:0:y>j?-1:y<j?1:0}),w},[i,a,u,m,N,P]);return r?e.jsxs("div",{className:"flex items-center justify-center py-8",children:[e.jsx(Z,{}),e.jsx("span",{className:"ml-2 text-muted-foreground",children:"Loading agenda items..."})]}):e.jsxs("div",{className:"space-y-4",children:[e.jsxs("div",{className:"flex flex-col sm:flex-row gap-3",children:[e.jsxs("div",{className:"relative flex-1",children:[e.jsx(Y,{className:"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground"}),e.jsx(J,{placeholder:"Search agenda items...",value:a,onChange:w=>h(w.target.value),className:"pl-10"})]}),e.jsxs("div",{className:"flex gap-2",children:[e.jsxs(_,{value:N,onValueChange:R,children:[e.jsxs(A,{className:"w-32",children:[e.jsx(U,{className:"h-4 w-4 mr-2"}),e.jsx(T,{})]}),e.jsxs(C,{children:[e.jsx(f,{value:"all",children:"All Status"}),e.jsx(f,{value:"pending",children:"Pending"}),e.jsx(f,{value:"discussed",children:"Discussed"}),e.jsx(f,{value:"moved",children:"Moved"})]})]}),e.jsxs(_,{value:P,onValueChange:B,children:[e.jsxs(A,{className:"w-32",children:[e.jsx(q,{className:"h-4 w-4 mr-2"}),e.jsx(T,{})]}),e.jsxs(C,{children:[e.jsx(f,{value:"all",children:"All Priority"}),e.jsx(f,{value:"1",children:"High"}),e.jsx(f,{value:"2",children:"Medium"}),e.jsx(f,{value:"3",children:"Low"})]})]}),e.jsxs(_,{value:`${u}-${m}`,onValueChange:w=>{const[x,v]=w.split("-");p(x),g(v)},children:[e.jsxs(A,{className:"w-40",children:[e.jsx(F,{className:"h-4 w-4 mr-2"}),e.jsx(T,{})]}),e.jsxs(C,{children:[e.jsx(f,{value:"createdAt-desc",children:"Newest First"}),e.jsx(f,{value:"createdAt-asc",children:"Oldest First"}),e.jsx(f,{value:"updatedAt-desc",children:"Recently Updated"}),e.jsx(f,{value:"priority-asc",children:"Priority: High to Low"}),e.jsx(f,{value:"priority-desc",children:"Priority: Low to High"}),e.jsx(f,{value:"title-asc",children:"Title: A to Z"}),e.jsx(f,{value:"title-desc",children:"Title: Z to A"}),e.jsx(f,{value:"status-asc",children:"Status: A to Z"})]})]})]})]}),i.length>0&&e.jsxs("div",{className:"text-sm text-muted-foreground",children:["Showing ",b.length," of ",i.length," agenda items"]}),b.length===0?e.jsx(K,{icon:$,title:i.length===0?d:"No matching items",description:i.length===0?c:"Try adjusting your search or filters"}):e.jsx("div",{className:"space-y-3",children:b.map(w=>e.jsx(Q,{item:w,onComplete:t,onMove:o,onEdit:n,onDelete:l,showActions:s},w.id))})]})},k=[{id:"vacation",name:"Vacation",value:"vacation",active:!0,color:"#3b82f6",order:1},{id:"sick_day",name:"Sick Day",value:"sick_day",active:!0,color:"#ef4444",order:2},{id:"day_off",name:"Day Off",value:"day_off",active:!0,color:"#10b981",order:3},{id:"personal_leave",name:"Personal Leave",value:"personal_leave",active:!0,color:"#f59e0b",order:4},{id:"training",name:"Training",value:"training",active:!0,color:"#8b5cf6",order:5}];class ne{static calculateDaysInPeriod(r,t){if(!r||!t)throw new Error("Start date and end date are required");const o=new Date(r),n=new Date(t);if(isNaN(o.getTime())||isNaN(n.getTime()))throw new Error("Invalid date format");if(n<o)throw new Error("End date must be after or equal to start date");const l=n.getTime()-o.getTime();return Math.floor(l/(1e3*60*60*24))+1}static validatePeriod(r,t,o,n,l){const s=[];if(r||s.push("Start date is required"),t||s.push("End date is required"),o||s.push("Reason is required"),!n&&!l&&s.push("Reference (team member or peer) is required"),r){const d=new Date(r);isNaN(d.getTime())&&s.push("Invalid start date format")}if(t){const d=new Date(t);isNaN(d.getTime())&&s.push("Invalid end date format")}if(r&&t){const d=new Date(r),c=new Date(t);!isNaN(d.getTime())&&!isNaN(c.getTime())&&c<d&&s.push("End date must be after or equal to start date")}return o&&(k.filter(c=>c.active).map(c=>c.value).includes(o)||s.push("Invalid reason type")),{isValid:s.length===0,errors:s}}static async getActivePeriodsForDate(r){if(!r)throw new Error("Date is required");const t=new Date(r);if(isNaN(t.getTime()))throw new Error("Invalid date format");try{return(await D.list()).filter(n=>{const l=new Date(n.start_date),s=new Date(n.end_date);return t>=l&&t<=s})}catch(o){throw new Error(`Failed to get active periods: ${o.message}`)}}static async getYearlyStats(r,t=new Date().getFullYear()){if(!r)throw new Error("Team member ID is required");if(!t||t<1900||t>3e3)throw new Error("Invalid year");try{const n=(await D.list()).filter(a=>a.team_member_id===r),l=`${t}-01-01`,s=`${t}-12-31`;let d=0;const c={};return n.forEach(a=>{const h=a.start_date,u=a.end_date,p=h>l?h:l,m=u<s?u:s;if(p<=m){const g=this.calculateDaysInPeriod(p,m);d+=g,c[a.reason]||(c[a.reason]=0),c[a.reason]+=g}}),{teamMemberId:r,year:t,totalDays:d,reasonBreakdown:c,periods:n.filter(a=>{const h=a.start_date,u=a.end_date,p=h>l?h:l,m=u<s?u:s;return p<=m})}}catch(o){throw new Error(`Failed to get yearly statistics: ${o.message}`)}}static async getYearlyStatsForPeer(r,t=new Date().getFullYear()){if(!r)throw new Error("Peer ID is required");if(!t||t<1900||t>3e3)throw new Error("Invalid year");try{const n=(await D.list()).filter(a=>a.peer_id===r),l=`${t}-01-01`,s=`${t}-12-31`;let d=0;const c={};return n.forEach(a=>{const h=a.start_date,u=a.end_date,p=h>l?h:l,m=u<s?u:s;if(p<=m){const g=this.calculateDaysInPeriod(p,m);d+=g,c[a.reason]||(c[a.reason]=0),c[a.reason]+=g}}),{peerId:r,year:t,totalDays:d,reasonBreakdown:c,periods:n.filter(a=>{const h=a.start_date,u=a.end_date,p=h>l?h:l,m=u<s?u:s;return p<=m})}}catch(o){throw new Error(`Failed to get yearly statistics: ${o.message}`)}}static async checkOverlaps(r,t,o,n=null){if(!r||!t||!o)throw new Error("Team member ID, start date, and end date are required");const l=new Date(t),s=new Date(o);if(isNaN(l.getTime())||isNaN(s.getTime()))throw new Error("Invalid date format");try{return(await D.list()).filter(a=>a.team_member_id===r&&(!n||a.id!==n)).filter(a=>{const h=new Date(a.start_date),u=new Date(a.end_date);return l<=u&&s>=h})}catch(d){throw new Error(`Failed to check overlaps: ${d.message}`)}}static async checkOverlapsForPeer(r,t,o,n=null){if(!r||!t||!o)throw new Error("Peer ID, start date, and end date are required");const l=new Date(t),s=new Date(o);if(isNaN(l.getTime())||isNaN(s.getTime()))throw new Error("Invalid date format");try{return(await D.list()).filter(a=>a.peer_id===r&&(!n||a.id!==n)).filter(a=>{const h=new Date(a.start_date),u=new Date(a.end_date);return l<=u&&s>=h})}catch(d){throw new Error(`Failed to check overlaps: ${d.message}`)}}static async getCurrentStatus(r,t=new Date().toISOString().split("T")[0]){if(!r)throw new Error("Team member ID is required");try{const n=(await this.getActivePeriodsForDate(t)).find(d=>d.team_member_id===r);if(!n)return null;const l=new Date(n.end_date),s=new Date(l);return s.setDate(s.getDate()+1),{...n,returnDate:s.toISOString().split("T")[0],daysRemaining:this.calculateDaysInPeriod(t,n.end_date)}}catch(o){throw new Error(`Failed to get current status: ${o.message}`)}}static async getCurrentStatusForPeer(r,t=new Date().toISOString().split("T")[0]){if(!r)throw new Error("Peer ID is required");try{const n=(await this.getActivePeriodsForDate(t)).find(d=>d.peer_id===r);if(!n)return null;const l=new Date(n.end_date),s=new Date(l);return s.setDate(s.getDate()+1),{...n,returnDate:s.toISOString().split("T")[0],daysRemaining:this.calculateDaysInPeriod(t,n.end_date)}}catch(o){throw new Error(`Failed to get current status: ${o.message}`)}}static getReasonTypes(){return k.filter(r=>r.active).sort((r,t)=>r.order-t.order)}static getReasonType(r){return k.find(t=>t.value===r)||null}}export{ae as A,ne as O};
