import{z as I,e as M,d as k}from"./index-ByFAet0J.js";import{CalendarService as h}from"./calendarService-jP3ReSQA.js";import{E as C,V as w,S as R,N,D as b}from"./chunk-DZDJsQre.js";import"./chunk-DHGN2BiO.js";import"./chunk-pjYta8vt.js";import"./chunk-CZDJnSNg.js";class E extends b{constructor(p,O=null,c=null){super(p,O,c),this.name="NotFoundError"}}class x extends R{constructor(p,O=null,c=null){super(p,O,c),this.name="OperationError"}}class V{static async _retryOperation(p,O={}){const{maxRetries:c=3,baseDelay:g=1e3,maxDelay:v=1e4,backoffMultiplier:i=2,operationName:s="operation",shouldRetry:e=null,onRetry:d=null}=O;return C.retryOperation(p,{maxRetries:c,baseDelay:g,maxDelay:v,backoffMultiplier:i,operationName:s,shouldRetry:e||((a,t)=>{if(a instanceof w||a instanceof E||a.message?.includes("dateTime cannot be in the past")&&t>1||a.message?.includes("validation loop")||a.message?.includes("infinite retry"))return!1;const n=a.message?.toLowerCase()||"";return n.includes("permission")||n.includes("unauthorized")||n.includes("forbidden")||n.includes("quota")||n.includes("limit exceeded")?!1:n.includes("network")||n.includes("timeout")||n.includes("connection")||n.includes("server error")||n.includes("service unavailable")?!0:a instanceof R||a instanceof N||a.name==="OperationError"}),onRetry:d})}static async syncOneOnOneMeetings(p={}){const{createMissing:O=!0,updateExisting:c=!1,dryRun:g=!1,showProgress:v=!1}=p;return C.wrapOperation(async()=>{C.validateParams(p,{createMissing:{type:"boolean"},updateExisting:{type:"boolean"},dryRun:{type:"boolean"}}),console.log("Starting OneOnOne meeting synchronization...");const s={timestamp:new Date().toISOString(),dryRun:g,totalOneOnOnes:0,processed:0,created:[],updated:[],skipped:[],errors:[],summary:{success:!0,createdCount:0,updatedCount:0,skippedCount:0,errorCount:0}},[e,d]=await Promise.all([I.list().catch(t=>{throw new b("Failed to load OneOnOne records","OneOnOne",null,t)}),M.list().catch(t=>{throw new b("Failed to load team members","TeamMember",null,t)})]);if(!Array.isArray(e))throw new b("OneOnOne.list() returned invalid data - expected array","OneOnOne");if(!Array.isArray(d))throw new b("TeamMember.list() returned invalid data - expected array","TeamMember");s.totalOneOnOnes=e.length;const a=new Map;d&&Array.isArray(d)&&d.forEach(t=>{t&&t.id&&a.set(t.id,t)});for(const t of e||[])try{if(!t||typeof t!="object"){s.errors.push({oneOnOneId:"unknown",teamMemberId:"unknown",error:"Invalid OneOnOne record - not an object",action:"skipped"});continue}if(s.processed++,!t.next_meeting_date){s.skipped.push({oneOnOneId:t.id,teamMemberId:t.team_member_id,reason:"No next_meeting_date set"});continue}const n=t.team_member_id?a.get(t.team_member_id):null;if(!n){s.errors.push({oneOnOneId:t.id,teamMemberId:t.team_member_id,error:"Team member not found",action:"skipped"});continue}let l=!1,u=null;if(t.next_meeting_calendar_event_id){try{u=await k.get(t.next_meeting_calendar_event_id)}catch(r){console.warn(`Error fetching calendar event ${t.next_meeting_calendar_event_id}:`,r),u=null}if(!u)l=!0,console.warn(`OneOnOne ${t.id} references non-existent calendar event ${t.next_meeting_calendar_event_id}`);else if(c){const r=new Date(u.start_date),o=new Date(t.next_meeting_date);r.getTime()!==o.getTime()&&(g||await this._retryOperation(async()=>{await h.updateOneOnOneMeeting(u.id,t.next_meeting_date)},{operationName:`update calendar event for OneOnOne ${t.id}`,maxRetries:2,shouldRetry:(m,_)=>m.message?.includes("dateTime cannot be in the past")?!1:!(m instanceof w||m instanceof E)}),s.updated.push({oneOnOneId:t.id,teamMemberId:t.team_member_id,teamMemberName:n.name,calendarEventId:u.id,oldDate:u.start_date,newDate:t.next_meeting_date}))}}else l=!0;if(l&&O)if(g)s.created.push({oneOnOneId:t.id,teamMemberId:t.team_member_id,teamMemberName:n.name,calendarEventId:"dry-run-placeholder",meetingDate:t.next_meeting_date});else{const r=await this._retryOperation(async()=>await h.createAndLinkOneOnOneMeeting(t.id,t.team_member_id,t.next_meeting_date),{operationName:`create calendar event for OneOnOne ${t.id}`,maxRetries:3,shouldRetry:(o,m)=>o.message?.includes("dateTime cannot be in the past")&&m>1?!1:!(o instanceof w||o instanceof E),onRetry:(o,m,_)=>{console.warn(`Retrying calendar event creation for OneOnOne ${t.id}, attempt ${m}, delay ${_}ms`)}});s.created.push({oneOnOneId:t.id,teamMemberId:t.team_member_id,teamMemberName:n.name,calendarEventId:r.calendarEvent.id,meetingDate:t.next_meeting_date})}else l&&!O&&s.skipped.push({oneOnOneId:t.id,teamMemberId:t.team_member_id,reason:"Missing calendar event but createMissing is false"})}catch(n){console.error(`Error processing OneOnOne ${t.id}:`,n),s.errors.push({oneOnOneId:t.id,teamMemberId:t.team_member_id,error:n.message,action:"failed"})}return s.summary.createdCount=s.created.length,s.summary.updatedCount=s.updated.length,s.summary.skippedCount=s.skipped.length,s.summary.errorCount=s.errors.length,s.summary.success=s.errors.length===0,console.log("OneOnOne meeting synchronization completed:",{total:s.totalOneOnOnes,created:s.summary.createdCount,updated:s.summary.updatedCount,skipped:s.summary.skippedCount,errors:s.summary.errorCount,success:s.summary.success}),s},{operationName:"OneOnOne Meeting Synchronization",showLoading:v,showSuccess:!0,successMessage:"OneOnOne meeting synchronization completed successfully",retryOptions:{maxRetries:1},errorOptions:{severity:C.SEVERITY.HIGH,context:{dryRun:g,createMissing:O,updateExisting:c}}})}static async ensureOneOnOneVisibility(p={}){const{teamMemberId:O=null,dateRange:c=null,createMissing:g=!0}=p,v="ensureOneOnOneVisibility";try{console.log("Ensuring OneOnOne meeting visibility...");const i={timestamp:new Date().toISOString(),scope:{teamMemberId:O,dateRange:c},totalChecked:0,visible:[],missing:[],created:[],errors:[],summary:{success:!0,visibleCount:0,missingCount:0,createdCount:0,errorCount:0}};let s=await I.list();if(O&&(s=s.filter(n=>n.team_member_id===O)),c&&c.start&&c.end){const n=new Date(c.start),l=new Date(c.end);s=s.filter(u=>{if(!u.next_meeting_date)return!1;const r=new Date(u.next_meeting_date);return r>=n&&r<=l})}s=s.filter(n=>n.next_meeting_date),i.totalChecked=s.length;const e=await h.getOneOnOneMeetings(),d=new Map(e.map(n=>[n.id,n])),a=await M.list(),t=new Map(a.map(n=>[n.id,n]));for(const n of s)try{const l=t.get(n.team_member_id);if(!l){i.errors.push({oneOnOneId:n.id,teamMemberId:n.team_member_id,error:"Team member not found"});continue}if(n.next_meeting_calendar_event_id){const u=d.get(n.next_meeting_calendar_event_id);if(u)i.visible.push({oneOnOneId:n.id,teamMemberId:n.team_member_id,teamMemberName:l.name,calendarEventId:u.id,meetingDate:n.next_meeting_date});else if(i.missing.push({oneOnOneId:n.id,teamMemberId:n.team_member_id,teamMemberName:l.name,meetingDate:n.next_meeting_date,reason:"Referenced calendar event not found"}),g)try{const r=await this._retryOperation(async()=>await h.createAndLinkOneOnOneMeeting(n.id,n.team_member_id,n.next_meeting_date),3,`create missing calendar event for OneOnOne ${n.id}`);i.created.push({oneOnOneId:n.id,teamMemberId:n.team_member_id,teamMemberName:l.name,calendarEventId:r.calendarEvent.id,meetingDate:n.next_meeting_date})}catch(r){i.errors.push({oneOnOneId:n.id,teamMemberId:n.team_member_id,error:`Failed to create calendar event: ${r.message}`})}}else if(i.missing.push({oneOnOneId:n.id,teamMemberId:n.team_member_id,teamMemberName:l.name,meetingDate:n.next_meeting_date,reason:"No calendar event linked"}),g)try{const u=await this._retryOperation(async()=>await h.createAndLinkOneOnOneMeeting(n.id,n.team_member_id,n.next_meeting_date),3,`create calendar event for OneOnOne ${n.id}`);i.created.push({oneOnOneId:n.id,teamMemberId:n.team_member_id,teamMemberName:l.name,calendarEventId:u.calendarEvent.id,meetingDate:n.next_meeting_date})}catch(u){i.errors.push({oneOnOneId:n.id,teamMemberId:n.team_member_id,error:`Failed to create calendar event: ${u.message}`})}}catch(l){console.error(`Error checking visibility for OneOnOne ${n.id}:`,l),i.errors.push({oneOnOneId:n.id,teamMemberId:n.team_member_id,error:l.message})}return i.summary.visibleCount=i.visible.length,i.summary.missingCount=i.missing.length,i.summary.createdCount=i.created.length,i.summary.errorCount=i.errors.length,i.summary.success=i.errors.length===0,console.log("OneOnOne visibility check completed:",{checked:i.totalChecked,visible:i.summary.visibleCount,missing:i.summary.missingCount,created:i.summary.createdCount,errors:i.summary.errorCount,success:i.summary.success}),i}catch(i){throw console.error("Error during OneOnOne visibility check:",i),new x(`OneOnOne visibility check failed: ${i.message}`,v,i)}}static async validateEventConsistency(p={}){const{includeOrphanedEvents:O=!0,includeMissingLinks:c=!0,includeInvalidData:g=!0,includeDuplicates:v=!0,includeBrokenReferences:i=!0}=p,s="validateEventConsistency";try{console.log("Starting event consistency validation...");const e={timestamp:new Date().toISOString(),totalEventsChecked:0,totalOneOnOnesChecked:0,inconsistencies:{orphanedEvents:[],missingLinks:[],invalidData:[],duplicateEvents:[],brokenReferences:[]},summary:{isConsistent:!0,totalIssues:0,orphanedCount:0,missingLinksCount:0,invalidDataCount:0,duplicatesCount:0,brokenReferencesCount:0}},[d,a,t]=await Promise.all([h.getOneOnOneMeetings(),I.list(),M.list()]);e.totalEventsChecked=d.length,e.totalOneOnOnesChecked=a.length;const n=new Map(a.map(r=>[r.id,r])),l=new Map(t.map(r=>[r.id,r])),u=new Map(d.map(r=>[r.id,r]));if(O){const r=new Set(a.filter(o=>o.next_meeting_calendar_event_id).map(o=>o.next_meeting_calendar_event_id));for(const o of d)!r.has(o.id)&&(!o.linked_entity_id||!n.has(o.linked_entity_id))&&e.inconsistencies.orphanedEvents.push({eventId:o.id,title:o.title,teamMemberId:o.team_member_id,startDate:o.start_date,linkedEntityId:o.linked_entity_id,issue:"Calendar event not linked to any OneOnOne record"})}if(c)for(const r of a)r.next_meeting_date&&!r.next_meeting_calendar_event_id&&e.inconsistencies.missingLinks.push({oneOnOneId:r.id,teamMemberId:r.team_member_id,nextMeetingDate:r.next_meeting_date,issue:"OneOnOne has next_meeting_date but no calendar event"});if(i)for(const r of a)r.next_meeting_calendar_event_id&&(u.get(r.next_meeting_calendar_event_id)||e.inconsistencies.brokenReferences.push({oneOnOneId:r.id,teamMemberId:r.team_member_id,referencedEventId:r.next_meeting_calendar_event_id,issue:"OneOnOne references non-existent calendar event"}));if(g)for(const r of d){const o=[],m=l.get(r.team_member_id);if(!m)o.push("Team member not found");else{const f=h.generateOneOnOneTitle(m.name);r.title!==f&&o.push(`Title mismatch: expected "${f}", got "${r.title}"`)}r.event_type!=="one_on_one"&&o.push(`Incorrect event type: expected "one_on_one", got "${r.event_type}"`),r.linked_entity_type!=="one_on_one"&&o.push(`Incorrect linked entity type: expected "one_on_one", got "${r.linked_entity_type}"`);const _=new Date(r.start_date),y=new Date(r.end_date);if(isNaN(_.getTime())||isNaN(y.getTime())?o.push("Invalid date format"):y<=_&&o.push("End date must be after start date"),r.linked_entity_id){const f=n.get(r.linked_entity_id);if(f&&f.next_meeting_date){const $=new Date(f.next_meeting_date);Math.abs(_.getTime()-$.getTime())>6e4&&o.push("Calendar event date does not match OneOnOne next_meeting_date")}}o.length>0&&e.inconsistencies.invalidData.push({eventId:r.id,title:r.title,teamMemberId:r.team_member_id,linkedEntityId:r.linked_entity_id,issues:o})}if(v){const r={};for(const o of d){const m=new Date(o.start_date).toDateString(),_=`${o.team_member_id}-${m}`;r[_]||(r[_]=[]),r[_].push(o)}for(const[o,m]of Object.entries(r))if(m.length>1){const _=l.get(m[0].team_member_id);e.inconsistencies.duplicateEvents.push({key:o,teamMemberId:m[0].team_member_id,teamMemberName:_?_.name:"Unknown",date:new Date(m[0].start_date).toDateString(),events:m.map(y=>({id:y.id,title:y.title,linkedEntityId:y.linked_entity_id})),count:m.length})}}return e.summary.orphanedCount=e.inconsistencies.orphanedEvents.length,e.summary.missingLinksCount=e.inconsistencies.missingLinks.length,e.summary.invalidDataCount=e.inconsistencies.invalidData.length,e.summary.duplicatesCount=e.inconsistencies.duplicateEvents.length,e.summary.brokenReferencesCount=e.inconsistencies.brokenReferences.length,e.summary.totalIssues=e.summary.orphanedCount+e.summary.missingLinksCount+e.summary.invalidDataCount+e.summary.duplicatesCount+e.summary.brokenReferencesCount,e.summary.isConsistent=e.summary.totalIssues===0,console.log("Event consistency validation completed:",{eventsChecked:e.totalEventsChecked,oneOnOnesChecked:e.totalOneOnOnesChecked,totalIssues:e.summary.totalIssues,isConsistent:e.summary.isConsistent}),e}catch(e){throw console.error("Error during event consistency validation:",e),new x(`Event consistency validation failed: ${e.message}`,s,e)}}static async repairMissingEvents(p={}){const{repairOrphaned:O=!0,repairMissing:c=!0,repairBroken:g=!0,removeDuplicates:v=!0,dryRun:i=!1}=p,s="repairMissingEvents";try{console.log("Starting calendar event repair...");const e={timestamp:new Date().toISOString(),dryRun:i,repairs:{orphanedRemoved:[],missingCreated:[],brokenFixed:[],duplicatesRemoved:[]},errors:[],summary:{success:!0,totalRepairs:0,orphanedRemovedCount:0,missingCreatedCount:0,brokenFixedCount:0,duplicatesRemovedCount:0,errorCount:0}},d=await this.validateEventConsistency();if(d.summary.isConsistent)return console.log("No inconsistencies found, no repairs needed"),e;if(O&&d.inconsistencies.orphanedEvents.length>0){console.log(`Repairing ${d.inconsistencies.orphanedEvents.length} orphaned events...`);for(const a of d.inconsistencies.orphanedEvents)try{i||await this._retryOperation(async()=>{await k.delete(a.eventId)},3,`delete orphaned event ${a.eventId}`),e.repairs.orphanedRemoved.push({eventId:a.eventId,title:a.title,teamMemberId:a.teamMemberId,action:i?"would_delete":"deleted"})}catch(t){e.errors.push({type:"orphaned_removal_failed",eventId:a.eventId,error:t.message})}}if(c&&d.inconsistencies.missingLinks.length>0){console.log(`Repairing ${d.inconsistencies.missingLinks.length} missing calendar events...`);for(const a of d.inconsistencies.missingLinks)try{if(i)e.repairs.missingCreated.push({oneOnOneId:a.oneOnOneId,teamMemberId:a.teamMemberId,calendarEventId:"dry-run-placeholder",meetingDate:a.nextMeetingDate,action:"would_create"});else{const t=await this._retryOperation(async()=>await h.createAndLinkOneOnOneMeeting(a.oneOnOneId,a.teamMemberId,a.nextMeetingDate),3,`create missing calendar event for OneOnOne ${a.oneOnOneId}`);e.repairs.missingCreated.push({oneOnOneId:a.oneOnOneId,teamMemberId:a.teamMemberId,calendarEventId:t.calendarEvent.id,meetingDate:a.nextMeetingDate,action:"created"})}}catch(t){e.errors.push({type:"missing_creation_failed",oneOnOneId:a.oneOnOneId,error:t.message})}}if(g&&d.inconsistencies.brokenReferences.length>0){console.log(`Repairing ${d.inconsistencies.brokenReferences.length} broken references...`);for(const a of d.inconsistencies.brokenReferences)try{i||await this._retryOperation(async()=>{await I.update(a.oneOnOneId,{next_meeting_calendar_event_id:null})},3,`clear broken reference for OneOnOne ${a.oneOnOneId}`),e.repairs.brokenFixed.push({oneOnOneId:a.oneOnOneId,teamMemberId:a.teamMemberId,referencedEventId:a.referencedEventId,action:i?"would_clear":"cleared"})}catch(t){e.errors.push({type:"broken_reference_fix_failed",oneOnOneId:a.oneOnOneId,error:t.message})}}if(v&&d.inconsistencies.duplicateEvents.length>0){console.log(`Removing ${d.inconsistencies.duplicateEvents.length} duplicate event groups...`);for(const a of d.inconsistencies.duplicateEvents)try{const t=a.events.slice(1);for(const n of t)i||await this._retryOperation(async()=>{await k.delete(n.id)},3,`delete duplicate event ${n.id}`),e.repairs.duplicatesRemoved.push({eventId:n.id,title:n.title,teamMemberId:a.teamMemberId,date:a.date,action:i?"would_delete":"deleted"})}catch(t){e.errors.push({type:"duplicate_removal_failed",duplicateKey:a.key,error:t.message})}}return e.summary.orphanedRemovedCount=e.repairs.orphanedRemoved.length,e.summary.missingCreatedCount=e.repairs.missingCreated.length,e.summary.brokenFixedCount=e.repairs.brokenFixed.length,e.summary.duplicatesRemovedCount=e.repairs.duplicatesRemoved.length,e.summary.errorCount=e.errors.length,e.summary.totalRepairs=e.summary.orphanedRemovedCount+e.summary.missingCreatedCount+e.summary.brokenFixedCount+e.summary.duplicatesRemovedCount,e.summary.success=e.errors.length===0,console.log("Calendar event repair completed:",{totalRepairs:e.summary.totalRepairs,orphanedRemoved:e.summary.orphanedRemovedCount,missingCreated:e.summary.missingCreatedCount,brokenFixed:e.summary.brokenFixedCount,duplicatesRemoved:e.summary.duplicatesRemovedCount,errors:e.summary.errorCount,success:e.summary.success}),e}catch(e){throw console.error("Error during calendar event repair:",e),new x(`Calendar event repair failed: ${e.message}`,s,e)}}}export{V as CalendarSynchronizationService,E as NotFoundError,x as OperationError};
