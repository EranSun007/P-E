import{G as y}from"./index-ByFAet0J.js";class I extends Error{constructor(e,s,t=null,r={}){super(e),this.name="CalendarError",this.code=s,this.originalError=t,this.context=r,this.timestamp=new Date().toISOString()}}class d extends I{constructor(e,s=null,t=null){super(e,"VALIDATION_ERROR"),this.name="ValidationError",this.field=s,this.value=t}}class E extends I{constructor(e,s=null,t=null){super(e,"NETWORK_ERROR",t),this.name="NetworkError",this.operation=s,this.isRetryable=!0}}class C extends I{constructor(e,s=null,t=null,r=null){super(e,"DATA_ERROR",r),this.name="DataError",this.entityType=s,this.entityId=t,this.isRetryable=!1}}class w extends I{constructor(e,s=null,t=null){super(e,"SYNC_ERROR",t),this.name="SynchronizationError",this.syncType=s,this.isRetryable=!0}}class a{static SEVERITY={LOW:"low",MEDIUM:"medium",HIGH:"high",CRITICAL:"critical"};static CATEGORIES={VALIDATION:"validation",NETWORK:"network",DATA:"data",SYNC:"synchronization",PERMISSION:"permission",UNKNOWN:"unknown"};static RETRY_CONFIG={maxRetries:3,baseDelay:1e3,maxDelay:1e4,backoffMultiplier:1.5};static handleError(e,s={}){const{operation:t="operation",showToast:r=!0,logError:o=!0,context:u={},severity:n=a.SEVERITY.MEDIUM,category:f=null}=s,c=f||a.categorizeError(e),i=a.getErrorInfo(e,c);return o&&a.logError(e,{operation:t,context:u,severity:n,category:c}),r&&a.showErrorToast(i,{operation:t,severity:n,context:u}),{error:e,category:c,severity:n,userMessage:i.userMessage,technicalMessage:i.technicalMessage,suggestions:i.suggestions,isRetryable:i.isRetryable,context:{...u,operation:t,timestamp:new Date().toISOString()}}}static categorizeError(e){if(e instanceof d)return a.CATEGORIES.VALIDATION;if(e instanceof E)return a.CATEGORIES.NETWORK;if(e instanceof C)return a.CATEGORIES.DATA;if(e instanceof w)return a.CATEGORIES.SYNC;const s=e.message?.toLowerCase()||"";return s.includes("network")||s.includes("fetch")||s.includes("connection")?a.CATEGORIES.NETWORK:s.includes("validation")||s.includes("invalid")||s.includes("required")?a.CATEGORIES.VALIDATION:s.includes("permission")||s.includes("unauthorized")||s.includes("forbidden")?a.CATEGORIES.PERMISSION:s.includes("sync")||s.includes("synchroniz")?a.CATEGORIES.SYNC:a.CATEGORIES.UNKNOWN}static getErrorInfo(e,s){const t={technicalMessage:e.message,isRetryable:!1,suggestions:[]};switch(s){case a.CATEGORIES.VALIDATION:return{...t,userMessage:"Please check your input and try again",suggestions:["Verify all required fields are filled","Check date formats and ranges","Ensure data meets validation requirements"]};case a.CATEGORIES.NETWORK:return{...t,userMessage:"Connection issue occurred. Please try again.",isRetryable:!0,suggestions:["Check your internet connection","Try refreshing the page","Wait a moment and retry the operation"]};case a.CATEGORIES.DATA:return{...t,userMessage:"Data issue encountered. Some information may be missing.",suggestions:["Try refreshing the calendar data","Check if related records exist","Contact support if the issue persists"]};case a.CATEGORIES.SYNC:return{...t,userMessage:"Synchronization failed. Calendar data may be outdated.",isRetryable:!0,suggestions:["Try manual sync from the calendar toolbar","Refresh the page to reload data","Check for conflicting calendar events"]};case a.CATEGORIES.PERMISSION:return{...t,userMessage:"Permission denied. You may not have access to this feature.",suggestions:["Check your user permissions","Contact your administrator","Try logging out and back in"]};default:return{...t,userMessage:"An unexpected error occurred. Please try again.",isRetryable:!0,suggestions:["Try refreshing the page","Wait a moment and retry","Contact support if the issue continues"]}}}static showErrorToast(e,s={}){const{operation:t,severity:r,context:o}=s,u=a.getErrorTitle(r,t),n=a.getErrorDescription(e,o);y({variant:"destructive",title:u,description:n,duration:r===a.SEVERITY.CRITICAL?0:5e3})}static getErrorTitle(e,s){switch(e){case a.SEVERITY.CRITICAL:return"Critical Error";case a.SEVERITY.HIGH:return"Error";case a.SEVERITY.MEDIUM:return`${s} Failed`;case a.SEVERITY.LOW:return"Warning";default:return"Error"}}static getErrorDescription(e,s){let t=e.userMessage;return e.suggestions.length>0&&(t+=`

Suggestions:
• `+e.suggestions.slice(0,2).join(`
• `)),t}static logError(e,s={}){const{operation:t,context:r,severity:o,category:u}=s,n={timestamp:new Date().toISOString(),operation:t,category:u,severity:o,message:e.message,stack:e.stack,context:r,errorType:e.constructor.name};switch(o){case a.SEVERITY.CRITICAL:console.error("CRITICAL ERROR:",n);break;case a.SEVERITY.HIGH:console.error("ERROR:",n);break;case a.SEVERITY.MEDIUM:console.warn("WARNING:",n);break;case a.SEVERITY.LOW:console.info("INFO:",n);break;default:console.error("ERROR:",n)}}static async retryOperation(e,s={}){const{maxRetries:t=a.RETRY_CONFIG.maxRetries,baseDelay:r=a.RETRY_CONFIG.baseDelay,maxDelay:o=a.RETRY_CONFIG.maxDelay,backoffMultiplier:u=a.RETRY_CONFIG.backoffMultiplier,operationName:n="operation",onRetry:f=null,shouldRetry:c=null}=s;let i,l=r;for(let R=1;R<=t;R++)try{const h=await e();return R>1&&(console.log(`${n} succeeded on attempt ${R}/${t}`),y({title:"Operation Recovered",description:`${n} succeeded after ${R} attempts`,variant:"default",duration:3e3})),h}catch(h){i=h;const g=a.categorizeError(h),T=a.getErrorInfo(h,g);if(!(c?c(h,R):T.isRetryable))throw h;if(R>=t)break;console.warn(`${n} failed on attempt ${R}/${t}: ${h.message}. Retrying in ${l}ms...`),f&&f(h,R,l),await new Promise(O=>setTimeout(O,l)),l=Math.min(l*u,o)}const m=new E(`${n} failed after ${t} attempts: ${i.message}`,n,i);throw a.handleError(m,{operation:n,severity:a.SEVERITY.HIGH,context:{attempts:t,lastError:i.message}}),m}static showSuccess(e,s={}){const{title:t="Success",duration:r=3e3,description:o=null}=s;y({title:t,description:o||e,variant:"default",duration:r})}static showLoading(e,s={}){const{showProgress:t=!1,estimatedDuration:r=null}=s;let o,u;const n=()=>{if(o=y({title:"Loading...",description:`${e} in progress...`,duration:0,variant:"default"}),t&&r){let i=0;const l=100/(r/1e3);u=setInterval(()=>{i=Math.min(i+l,95),o&&o.update({description:`${e} in progress... ${Math.round(i)}%`})},1e3)}},f=(i,l=null)=>{if(o){const m=l!==null?`${i} ${Math.round(l)}%`:i;o.update({description:m})}},c=(i=!0,l=null)=>{u&&clearInterval(u),o&&(i&&l?(o.update({title:"Completed",description:l,variant:"default"}),setTimeout(()=>{o&&o.dismiss()},2e3)):o.dismiss())};return n(),{update:f,dismiss:c}}static async wrapOperation(e,s={}){const{operationName:t="operation",showLoading:r=!1,showSuccess:o=!1,successMessage:u=`${t} completed successfully`,retryOptions:n={},errorOptions:f={}}=s;let c;try{r&&(c=a.showLoading(t,{showProgress:n.maxRetries>1,estimatedDuration:n.maxRetries*n.baseDelay||3e3}));const i=n.maxRetries>0?await a.retryOperation(e,{...n,operationName:t,onRetry:(l,m,R)=>{c&&c.update(`Retrying ${t}... (attempt ${m})`)}}):await e();return o&&a.showSuccess(u),c&&c.dismiss(!0,o?null:u),i}catch(i){throw c&&c.dismiss(!1),a.handleError(i,{operation:t,...f}),i}}static createRecoveryAction(e,s="Retry"){return{label:s,action:e}}static validateParams(e,s){for(const[t,r]of Object.entries(s)){const o=e[t];if(r.required&&(o==null||o===""))throw new d(`${t} is required`,t,o);if(o!=null){if(r.type&&typeof o!==r.type)throw new d(`${t} must be of type ${r.type}`,t,o);if(r.minLength&&o.length<r.minLength)throw new d(`${t} must be at least ${r.minLength} characters`,t,o);if(r.maxLength&&o.length>r.maxLength)throw new d(`${t} must be no more than ${r.maxLength} characters`,t,o);if(r.pattern&&!r.pattern.test(o))throw new d(`${t} format is invalid`,t,o);if(r.custom&&!r.custom(o))throw new d(r.customMessage||`${t} is invalid`,t,o)}}}}export{C as D,a as E,E as N,w as S,d as V};
